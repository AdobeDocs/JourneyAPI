{
  "swagger": "2.0",
  "info": {
    "description": "This API allows access to capping configuration for Journey Orchestration by an authorized technical account created through the Adobe I/O Console.\nLearn more about the capping mechanism by clicking on the following link: https://docs.adobe.com/content/help/en/journeys/using/working-with-apis/capping.html\n\n**API paths**:\nJourney Orchestration Gateway URL: https://journey.adobe.io/\n  Base path for this API: /authoring\n  Example of a complete path: https://journey.adobe.io/authoring/endpointConfigs\n\n**Required headers**:\n  All calls require the headers **Authorization**, **x-gw-ims-org-id**, and **x-api-key**.\n  All requests with a payload in the request body (such as POST, PUT calls) must include the header **Content-Type** with the value *application/json*\n  \n**States of a capping configuration**:\n  The current state of a capping configuration is either *'created'*, *'updated'* or *'deployed'*. Refer to the description and example below for GET **/endpointConfigs/{uid}** and PUT **/endpointConfigs/{uid}** operations.\n\n**Deployment status**:\n  In creation and update responses, a **canDeploy** JSON object indicates whether or not the capping configuration can be deployed. It may contain some errors and warnings. Refer to the description and example below for GET **/endpointConfigs/canDeploy/{uid}** operation.",
    "version": "1.0",
    "title": "Journey Orchestration APIs"
  },
  "host": "journey.adobe.io",
  "basePath": "/authoring",
  "schemes": [
    "https"
  ],
  "paths": {
    "/endpointConfigs": {
      "post": {
        "tags": [
          "Capping configuration"
        ],
        "summary": "Creates an endpoint capping configuration",
        "description": "Creates a capping configuration on a given endpoint identified by its URL. The endpoint can be used in one or more actions and data sources.\n\nIn the given payload, the capping configuration is defined by :\n\n- **url** : the URL of the endpoint, as defined in the actions or data sources.\n\n- **methods** : the methods called on this endpoint, as defined in the actions or data sources.\n\n- Within **services** JSON object, one of the two following values is expected :\n\n  * *\"action\"* if the capping will be applied on the endpoint when executing a Custom Action\n  * *\"dataSource\"* if the capping will be applied on the endpoint when fetching data from a Data Source\n\n- (optional) **maxHttpConnections**: max count of simultaneous connections to the endpoint. If not provided, there will be no limitation of the number of connections to the endpoint.\n\n- Within **rating** JSON object :\n  * **maxCallsCount**: max count of calls to be performed in the given period (min value is 1)\n  * **periodInMs**: duration in milliseconds (value greater than 0)\n  \n  \n",
        "operationId": "com/adobe/voyager/service/authoring/restapis/v1_0/swaggerendpoints/post/endpointconfigs public",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "description": "The access token provided after authorization in the format â€œBearer {ACCESS_TOKEN}",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "name": "x-api-key",
            "description": "Specific API key for your unique Journey Orchestration configuration ({API_KEY})",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "name": "x-gw-ims-org-id",
            "description": "Unique Identifier for your IMS Organization ({IMS_ORG})",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "payload",
            "required": true,
            "schema": {
              "properties": {
                "methods": {
                  "type": "array",
                  "description": "The methods called on this endpoint, as defined in the actions or data sources",
                  "items": {
                    "type": "string",
                    "enum": [
                      "GET",
                      "POST",
                      "PUT",
                      "PATCH",
                      "DELETE",
                      "OPTION"
                    ]
                  }
                },
                "orgId": {
                  "description": "The unique identifier of the IMS organization",
                  "type": "string"
                },
                "services": {
                  "type": "object",
                  "properties": {
                    "action|dataSource": {
                      "description": "\\'action' or 'dataSource'",
                      "type": "object",
                      "additionalProperties": false,
                      "properties": {
                        "rating": {
                          "properties": {
                            "maxCalls": {
                              "type": "integer",
                              "description": "Max count of calls to be performed in the given period (min value is 1)"
                            },
                            "periodInMs": {
                              "type": "integer",
                              "description": "Duration in milliseconds (value greater than 0)"
                            }
                          },
                          "required": [
                            "maxCalls",
                            "periodInMs"
                          ]
                        }
                      },
                      "required": [
                        "rating"
                      ]
                    }
                  },
                  "required": [
                    "action|dataSource"
                  ]
                },
                "url": {
                  "type": "string",
                  "description": "The URL of the endpoint"
                }
              },
              "required": [
                "methods",
                "orgId",
                "services",
                "url"
              ],
              "example": {
                "url": "https://api.example.org/data/2.5/weather",
                "methods": [
                  "GET"
                ],
                "services": {
                  "dataSource": {
                    "maxHttpConnections": 20000,
                    "rating": {
                      "maxCallsCount": 5000,
                      "periodInMs": 1000
                    }
                  }
                },
                "orgId": "<IMS Org Id>"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK: the operation was successful.",
            "schema": {
              "type": "object",
              "properties": {
                "createdElement": {
                  "type": "object",
                  "additionalProperties": false,
                  "required": [
                    "uid"
                  ],
                  "properties": {
                    "methods": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "enum": [
                          "GET",
                          "POST",
                          "PUT",
                          "PATCH",
                          "DELETE",
                          "OPTION"
                        ]
                      }
                    },
                    "orgId": {
                      "type": "string"
                    },
                    "services": {
                      "type": "object",
                      "properties": {
                        "action|dataSource": {
                          "type": "object",
                          "additionalProperties": false,
                          "properties": {
                            "rating": {
                              "properties": {
                                "callRating": {
                                  "type": "object",
                                  "additionalProperties": false,
                                  "properties": {
                                    "type": {
                                      "type": "string"
                                    },
                                    "maxCalls": {
                                      "type": "integer"
                                    },
                                    "periodInMs": {
                                      "type": "integer"
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    },
                    "url": {
                      "type": "string"
                    },
                    "metadata": {
                      "type": "object",
                      "additionalProperties": false,
                      "properties": {
                        "createdBy": {
                          "type": "string"
                        },
                        "createdById": {
                          "type": "string"
                        },
                        "createdAt": {
                          "type": "string"
                        },
                        "lastModifiedBy": {
                          "type": "string"
                        },
                        "lastModifiedById": {
                          "type": "string"
                        },
                        "lastModifiedAt": {
                          "type": "string"
                        },
                        "lastDeployedBy": {
                          "type": "string"
                        },
                        "lastDeployedById": {
                          "type": "string"
                        },
                        "lastDeployedAt": {
                          "type": "string"
                        }
                      }
                    },
                    "state": {
                      "type": "string",
                      "enum": [
                        "created",
                        "updated",
                        "deployed"
                      ]
                    },
                    "tenantId": {
                      "type": "string"
                    },
                    "uid": {
                      "type": "string"
                    },
                    "authoringFormatVersion": {
                      "type": "string"
                    }
                  }
                },
                "uid": {
                  "type": "string"
                },
                "uri": {
                  "type": "string"
                },
                "resStatus": {
                  "type": "string",
                  "enum": [
                    "created"
                  ]
                },
                "canDeploy": {
                  "properties": {
                    "validationStatus": {
                      "type": "string"
                    },
                    "reason": {
                      "type": "string"
                    },
                    "errors": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "errorCode": {
                            "type": "integer"
                          },
                          "error": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "examples": {
              "application/json": {
                "createdElement": {
                  "url": "https://api.example.org/data/2.5/weather",
                  "methods": [
                    "GET"
                  ],
                  "services": {
                    "dataSource": {
                      "maxHttpConnections": 30000,
                      "rating": {
                        "maxCallsCount": 5000,
                        "periodInMs": 1000
                      }
                    }
                  },
                  "metadata": {
                    "createdBy": "<user name>",
                    "createdById": "<user adobeId>",
                    "lastModifiedBy": "<user name>",
                    "lastModifiedById": "<user adobeId>",
                    "createdAt": "2020-03-09T18:21:52.432963Z",
                    "lastModifiedAt": "2020-03-09T18:21:52.432963Z"
                  },
                  "state": "created",
                  "orgId": "<IMS Org Id>",
                  "tenantId": "prod",
                  "uid": "9e6bbdf4-8e40-4ac8-9e83-1e2cc7f0f1e7",
                  "authoringFormatVersion": "1.0",
                  "hasBeenDeployed": false
                },
                "uid": "9e6bbdf4-8e40-4ac8-9e83-1e2cc7f0f1e7",
                "uri": "/voyager/apis/endpointConfigs/9e6bbdf4-8e40-4ac8-9e83-1e2cc7f0f1e7",
                "resStatus": "created",
                "canDeploy": {
                  "validationStatus": "ok"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error: invalid values or missing elements in the given payload."
          }
        }
      }
    },
    "/endpointConfigs/{uid}": {
      "get": {
        "tags": [
          "Capping configuration"
        ],
        "summary": "Gets an endpoint capping configuration",
        "description": "Returns the capping configuration identified by the given Unique ID. The latest definition is returned.\n\nIn addition to the data provided when creating or updating a configuration, the response essentially contains the following elements:\n- **uid** : Unique ID of the capping configuration, generated at creation time\n- **metadata** : information about creation, last update and last deployment\n- **state** : current state of the capping configuration, either *'created'*, *'updated'* or *'deployed'*\n- **hasBeenDeployed** : *true* or *false*\n- **deployedConfig** in case the configuration has been deployed: this is the capping configuration at latest deployment time. The current capping configuration differs if it has been updated since.",
        "operationId": "com/adobe/voyager/service/authoring/restapis/v1_0/swaggerendpoints/get/endpointconfigs_uid public",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "description": "The access token provided after authorization in the format â€œBearer {ACCESS_TOKEN}",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "name": "x-api-key",
            "description": "Specific API key for your unique Journey Orchestration configuration ({API_KEY})",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "name": "x-gw-ims-org-id",
            "description": "Unique Identifier for your IMS Organization ({IMS_ORG})",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "name": "uid",
            "description": "Object unique ID",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK: the operation was successful.",
            "schema": {
              "type": "object",
              "properties": {
                "result": {
                  "type": "object",
                  "additionalProperties": false,
                  "required": [
                    "uid"
                  ],
                  "properties": {
                    "_id": {
                      "type": "string"
                    },
                    "url": {
                      "type": "string"
                    },
                    "methods": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "enum": [
                          "GET",
                          "POST",
                          "PUT",
                          "PATCH",
                          "DELETE",
                          "OPTION"
                        ]
                      }
                    },
                    "services": {
                      "type": "object",
                      "properties": {
                        "action|dataSource": {
                          "type": "object",
                          "additionalProperties": false,
                          "properties": {
                            "rating": {
                              "properties": {
                                "callRating": {
                                  "type": "object",
                                  "additionalProperties": false,
                                  "properties": {
                                    "type": {
                                      "type": "string"
                                    },
                                    "maxCalls": {
                                      "type": "integer"
                                    },
                                    "periodInMs": {
                                      "type": "integer"
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    },
                    "metadata": {
                      "type": "object",
                      "additionalProperties": false,
                      "properties": {
                        "createdBy": {
                          "type": "string"
                        },
                        "createdById": {
                          "type": "string"
                        },
                        "createdAt": {
                          "type": "string"
                        },
                        "lastModifiedBy": {
                          "type": "string"
                        },
                        "lastModifiedById": {
                          "type": "string"
                        },
                        "lastModifiedAt": {
                          "type": "string"
                        },
                        "lastDeployedBy": {
                          "type": "string"
                        },
                        "lastDeployedById": {
                          "type": "string"
                        },
                        "lastDeployedAt": {
                          "type": "string"
                        }
                      }
                    },
                    "state": {
                      "type": "string",
                      "enum": [
                        "created",
                        "updated",
                        "deployed"
                      ]
                    },
                    "orgId": {
                      "type": "string"
                    },
                    "tenantId": {
                      "type": "string"
                    },
                    "uid": {
                      "type": "string"
                    },
                    "authoringFormatVersion": {
                      "type": "string"
                    },
                    "hasBeenDeployed": {
                      "type": "boolean"
                    }
                  }
                }
              }
            },
            "examples": {
              "application/json": {
                "result": {
                  "_id": "5fc2cbf1-3c31-4bb6-91ef-0ac9e277d3bc",
                  "url": "https://api.example.org/data/2.5/weather",
                  "methods": [
                    "POST",
                    "PUT"
                  ],
                  "services": {
                    "action": {
                      "maxHttpConnections": 15000,
                      "rating": {
                        "maxCallsCount": 2000,
                        "periodInMs": 1000
                      }
                    }
                  },
                  "metadata": {
                    "createdBy": "<user name>",
                    "createdById": "<user adobeId>",
                    "lastModifiedBy": "<user name>",
                    "lastModifiedById": "<user adobeId>",
                    "createdAt": "2020-03-03T10:42:47.813552Z",
                    "lastModifiedAt": "2020-03-13T17:24:11.765320Z"
                  },
                  "state": "updated",
                  "orgId": "<IMS Org Id>",
                  "tenantId": "prod",
                  "uid": "5fc2cbf1-3c31-4bb6-91ef-0ac9e277d3bc",
                  "authoringFormatVersion": "1.0",
                  "hasBeenDeployed": false
                }
              }
            }
          },
          "404": {
            "description": "Not Found: unknown given Unique ID."
          }
        }
      },
      "put": {
        "tags": [
          "Capping configuration"
        ],
        "summary": "Updates an endpoint capping configuration",
        "description": "Updates the capping configuration identified by the given Unique ID. The operation is an overwrite of the existing configuration, therefore the request body must include all fields required to create a configuration.\n\nA configuration can be updated at any time, even if it has been deployed. In such case, **state** is *'updated'* and **hasBeenDeployed** is *true*. To apply the latest changes, the configuration must be deployed again. The **deployedConfig** object always defines the configuration which is currently deployed.",
        "operationId": "com/adobe/voyager/service/authoring/restapis/v1_0/swaggerendpoints/put/endpointconfigs_uid public",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "description": "The access token provided after authorization in the format â€œBearer {ACCESS_TOKEN}",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "name": "x-api-key",
            "description": "Specific API key for your unique Journey Orchestration configuration ({API_KEY})",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "name": "x-gw-ims-org-id",
            "description": "Unique Identifier for your IMS Organization ({IMS_ORG})",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "name": "uid",
            "description": "Object unique ID",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "payload",
            "required": true,
            "schema": {
              "properties": {
                "methods": {
                  "type": "array",
                  "description": "The methods called on this endpoint, as defined in the actions or data sources",
                  "items": {
                    "type": "string",
                    "enum": [
                      "GET",
                      "POST",
                      "PUT",
                      "PATCH",
                      "DELETE",
                      "OPTION"
                    ]
                  }
                },
                "orgId": {
                  "description": "The unique identifier of the IMS organization",
                  "type": "string"
                },
                "services": {
                  "type": "object",
                  "properties": {
                    "action|dataSource": {
                      "description": "\\'action' or 'dataSource'",
                      "type": "object",
                      "additionalProperties": false,
                      "properties": {
                        "rating": {
                          "properties": {
                            "maxCalls": {
                              "type": "integer",
                              "description": "Max count of calls to be performed in the given period (min value is 1)"
                            },
                            "periodInMs": {
                              "type": "integer",
                              "description": "Duration in milliseconds (value greater than 0)"
                            }
                          },
                          "required": [
                            "maxCalls",
                            "periodInMs"
                          ]
                        }
                      },
                      "required": [
                        "rating"
                      ]
                    }
                  },
                  "required": [
                    "action|dataSource"
                  ]
                },
                "url": {
                  "type": "string",
                  "description": "The URL of the endpoint"
                }
              },
              "required": [
                "methods",
                "orgId",
                "services",
                "url"
              ],
              "example": {
                "url": "https://api.example.org/data/2.5/*",
                "methods": [
                  "GET"
                ],
                "services": {
                  "dataSource": {
                    "maxHttpConnections": 30000,
                    "rating": {
                      "maxCallsCount": 5000,
                      "periodInMs": 1000
                    }
                  }
                },
                "orgId": "<IMS Org Id>"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK: operation was successful.",
            "schema": {
              "type": "object",
              "properties": {
                "updatedElement": {
                  "type": "object",
                  "additionalProperties": false,
                  "required": [
                    "uid"
                  ],
                  "properties": {
                    "methods": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "enum": [
                          "GET",
                          "POST",
                          "PUT",
                          "PATCH",
                          "DELETE",
                          "OPTION"
                        ]
                      }
                    },
                    "orgId": {
                      "type": "string"
                    },
                    "services": {
                      "type": "object",
                      "properties": {
                        "action|dataSource": {
                          "type": "object",
                          "additionalProperties": false,
                          "properties": {
                            "rating": {
                              "properties": {
                                "callRating": {
                                  "type": "object",
                                  "additionalProperties": false,
                                  "properties": {
                                    "type": {
                                      "type": "string"
                                    },
                                    "maxCalls": {
                                      "type": "integer"
                                    },
                                    "periodInMs": {
                                      "type": "integer"
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    },
                    "url": {
                      "type": "string"
                    },
                    "uid": {
                      "type": "string"
                    },
                    "metadata": {
                      "type": "object",
                      "additionalProperties": false,
                      "properties": {
                        "createdBy": {
                          "type": "string"
                        },
                        "createdById": {
                          "type": "string"
                        },
                        "createdAt": {
                          "type": "string"
                        },
                        "lastModifiedBy": {
                          "type": "string"
                        },
                        "lastModifiedById": {
                          "type": "string"
                        },
                        "lastModifiedAt": {
                          "type": "string"
                        },
                        "lastDeployedBy": {
                          "type": "string"
                        },
                        "lastDeployedById": {
                          "type": "string"
                        },
                        "lastDeployedAt": {
                          "type": "string"
                        }
                      }
                    },
                    "state": {
                      "type": "string",
                      "enum": [
                        "created",
                        "updated",
                        "deployed"
                      ]
                    },
                    "hasBeenDeployed": {
                      "type": "boolean"
                    },
                    "tenantId": {
                      "type": "string"
                    }
                  }
                },
                "uid": {
                  "type": "string"
                },
                "uri": {
                  "type": "string"
                },
                "resStatus": {
                  "type": "string"
                },
                "canDeploy": {
                  "properties": {
                    "validationStatus": {
                      "type": "string"
                    },
                    "reason": {
                      "type": "string"
                    },
                    "errors": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "errorCode": {
                            "type": "integer"
                          },
                          "error": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "examples": {
              "application/json": {
                "updatedElement": {
                  "methods": [
                    "GET"
                  ],
                  "orgId": "<IMS Org Id>",
                  "services": {
                    "action": {
                      "maxHttpConnections": 30000,
                      "rating": {
                        "maxCallsCount": 5000,
                        "periodInMs": 1000
                      }
                    }
                  },
                  "url": "https://api.example.org/data/2.5/*",
                  "uid": "9e6bbdf4-8e40-4ac8-9e83-1e2cc7f0f1e7",
                  "metadata": {
                    "createdBy": "<user name>",
                    "createdById": "<user adobeId>",
                    "lastModifiedBy": "<user name>",
                    "lastModifiedById": "<user adobeId>",
                    "createdAt": "2020-03-09T18:21:52.432963Z",
                    "lastModifiedAt": "2020-04-10T11:21:52.432963Z"
                  },
                  "state": "updated",
                  "hasBeenDeployed": false,
                  "tenantId": "prod"
                },
                "uid": "9e6bbdf4-8e40-4ac8-9e83-1e2cc7f0f1e7",
                "uri": "/voyager/apis/endpointConfigs/9e6bbdf4-8e40-4ac8-9e83-1e2cc7f0f1e7",
                "resStatus": "updated",
                "canDeploy": {
                  "validationStatus": "ok"
                }
              }
            }
          },
          "404": {
            "description": "Not Found: unknown given Unique ID."
          },
          "500": {
            "description": "Internal Server Error: invalid values or missing elements in the given payload."
          }
        }
      },
      "delete": {
        "tags": [
          "Capping configuration"
        ],
        "summary": "Deletes an endpoint capping configuration",
        "description": "Deletes the capping configuration identified by the given Unique ID.\n\nIn case the configuration has been deployed, it must be undeployed before being deleted. Otherwise an error response with HTTP Status Code 500 is returned :\n  ```json\n  {\n    \"status\": 500,\n    \"error\": {\n      \"code\":1451,\n      \"family\": \"INPUT_OUTPUT_ERROR\",\n      \"message\": \"Can't delete a deployed endpoint config. Undeploy it before deleting it\",\n      \"service\": \"vyg-authoring-api\",\n      \"version\": \"ce5cac3\",\n      \"context\": \"com.adobe.voyager.service.authoring.restapis.v1_0.EndpointConfigService:189\"\n      \"schema\":\"21835D7E5BFF031F0A494026@AdobeOrg_prod_journeyVersions\"\n    },\n    \"requestId\": \"pxSRgsBzUKYcMyNlqc0paqIJZfc0qdAw\"\n  }\n  ```\n\nTo override this control, you need to pass *forceDelete=true* as query parameter.",
        "operationId": "com/adobe/voyager/service/authoring/restapis/v1_0/swaggerendpoints/delete/endpointconfigs_uid public",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "description": "The access token provided after authorization in the format â€œBearer {ACCESS_TOKEN}",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "name": "x-api-key",
            "description": "Specific API key for your unique Journey Orchestration configuration ({API_KEY})",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "name": "x-gw-ims-org-id",
            "description": "Unique Identifier for your IMS Organization ({IMS_ORG})",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "name": "uid",
            "description": "Object Unique ID",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "forceDelete",
            "description": "Allows to delete a deployed endpoint configuration",
            "in": "query",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "200": {
            "description": "OK: the operation was successful.",
            "schema": {
              "type": "object",
              "properties": {}
            },
            "examples": {
              "application/json": {}
            }
          },
          "404": {
            "description": "Not Found: unknown given Unique ID."
          },
          "500": {
            "description": "Internal Server Error: invalid values or missing elements in the given payload."
          }
        }
      }
    },
    "/endpointConfigs/{uid}/canDeploy": {
      "get": {
        "tags": [
          "Capping configuration"
        ],
        "summary": "Checks if an endpoint capping configuration can be deployed",
        "description": "Calling this operation is not mandatory for using any other operation of the capping API. It allows to verify wether or not a capping configuration can be deployed. It returns the validation status of the configuration identified by its Unique ID, either:\n  - **\"ok\"**\n  - **\"error\"**\n\nThe potential errors are:\n  - **ERR_ENDPOINTCONFIG_100**: capping config: missing or invalid url\n  - **ERR_ENDPOINTCONFIG_101**: capping config: malformed url\n  - **ERR_ENDPOINTCONFIG_102**: capping config: malformed url: wildchar in url not allowed in host:port\n  - **ERR_ENDPOINTCONFIG_103**: capping config: missing HTTP methods\n  - **ERR_ENDPOINTCONFIG_104**: capping config: no call rating defined\n  - **ERR_ENDPOINTCONFIG_107**: capping config: invalid max calls count (maxCallsCount)\n  - **ERR_ENDPOINTCONFIG_108**: capping config: invalid max calls count (periodInMs)\n  - **ERR_ENDPOINTCONFIG_111**: capping config: can't create endpoint config: invalid payload\n  - **ERR_ENDPOINTCONFIG_112**: capping config: can't create endpoint config: expecting a JSON payload\n  - **ERR_AUTHORING_ENDPOINTCONFIG_1**: invalid service name '\\<given value\\>': must be 'dataSource' or 'action'\n  \n   The potential warning is:\n  - **ERR_ENDPOINTCONFIG_106**: capping config: max HTTP connections not defined: no limitation by default\n",
        "operationId": "com/adobe/voyager/service/authoring/restapis/v1_0/swaggerendpoints/get/endpointconfigs_uid_candeploy public",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "description": "The access token provided after authorization in the format â€œBearer {ACCESS_TOKEN}",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "name": "x-api-key",
            "description": "Specific API key for your unique Journey Orchestration configuration ({API_KEY})",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "name": "x-gw-ims-org-id",
            "description": "Unique Identifier for your IMS Organization ({IMS_ORG})",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "name": "uid",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK: the operation was successful.",
            "schema": {
              "type": "object",
              "properties": {
                "canDeploy": {
                  "properties": {
                    "validationStatus": {
                      "type": "string"
                    },
                    "reason": {
                      "type": "string"
                    },
                    "errors": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "errorCode": {
                            "type": "integer"
                          },
                          "error": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "examples": {
              "application/json": {
                "canDeploy": {
                  "validationStatus": "error",
                  "reason": "1 error is currently blocking the publication",
                  "errors": [
                    {
                      "errorCode": "ERR_ENDPOINTCONFIG_101",
                      "error": "capping config: malformed url"
                    }
                  ],
                  "warnings": [
                    {
                      "warningCode": "ERR_ENDPOINTCONFIG_106",
                      "warning": "capping config: max HTTP connections not defined: no limitation by default",
                      "scope": {
                        "endpointConfigService": "dataSource",
                        "endpointConfigUrl": "https://api.example*.org:8*0/data/2.5/weather"
                      }
                    }
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Not Found: unknown given Unique ID."
          }
        }
      }
    },
    "/endpointConfigs/{uid}/deploy": {
      "post": {
        "tags": [
          "Capping configuration"
        ],
        "summary": "Deploys an endpoint capping configuration",
        "description": "Deploys the capping configuration identified by the given Unique ID.\n\nA successful deployment returns an empty response body and HTTP Status Code 204 (No-content). In such case, the configuration state is changed to *'deployed'* and **hasBeenDeployed** is *true*.",
        "operationId": "com/adobe/voyager/service/authoring/restapis/v1_0/swaggerendpoints/post/endpointconfigs_uid_deploy public",
        "parameters": [
          {
            "name": "Authorization",
            "description": "The access token provided after authorization in the format â€œBearer {ACCESS_TOKEN}",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "name": "x-api-key",
            "description": "Specific API key for your unique Journey Orchestration configuration ({API_KEY})",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "name": "x-gw-ims-org-id",
            "description": "Unique Identifier for your IMS Organization ({IMS_ORG})",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "name": "uid",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": "No Content: the operation was successful."
          },
          "500": {
            "description": "Internal Server Error: the definition of given configuration definition was not valid."
          }
        }
      }
    },
    "/endpointConfigs/{uid}/undeploy": {
      "post": {
        "tags": [
          "Capping configuration"
        ],
        "summary": "Undeploys an endpoint capping configuration",
        "description": "Undeploys the capping configuration identified by the given Unique ID.\n\nA successful undeployment returns an empty response body and HTTP Status Code 204 (No-content). In such case, the configuration state is changed back to the state before the deployment, either *'created'* or *'updated'*, and **hasBeenDeployed** is changed to *false*.",
        "operationId": "com/adobe/voyager/service/authoring/restapis/v1_0/swaggerendpoints/post/endpointconfigs_uid_undeploy public",
        "parameters": [
          {
            "name": "Authorization",
            "description": "The access token provided after authorization in the format â€œBearer {ACCESS_TOKEN}",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "name": "x-api-key",
            "description": "Specific API key for your unique Journey Orchestration configuration ({API_KEY})",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "name": "x-gw-ims-org-id",
            "description": "Unique Identifier for your IMS Organization ({IMS_ORG})",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "name": "uid",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": "No Content: the operation was successful or the given configuration was not deployed."
          }
        }
      }
    },
    "/list/endpointConfigs": {
      "post": {
        "tags": [
          "Capping configuration"
        ],
        "summary": "Lists the endpoint capping configurations",
        "description": "Returns the list of all endpoint capping configurations defined for the given IMS Organization.",
        "operationId": "com/adobe/voyager/service/authoring/restapis/v1_0/swaggerendpoints/post/list_endpointconfigs public",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "description": "The access token provided after authorization in the format â€œBearer {ACCESS_TOKEN}",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "name": "x-api-key",
            "description": "Specific API key for your unique Journey Orchestration configuration ({API_KEY})",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "name": "x-gw-ims-org-id",
            "description": "Unique Identifier for your IMS Organization ({IMS_ORG})",
            "in": "header",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK: the operation was successful.",
            "schema": {
              "type": "object",
              "properties": {
                "results": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "metadata": {
                        "type": "object",
                        "additionalProperties": false,
                        "properties": {
                          "createdBy": {
                            "type": "string"
                          },
                          "createdById": {
                            "type": "string"
                          },
                          "createdAt": {
                            "type": "string"
                          },
                          "lastModifiedBy": {
                            "type": "string"
                          },
                          "lastModifiedById": {
                            "type": "string"
                          },
                          "lastModifiedAt": {
                            "type": "string"
                          },
                          "lastDeployedBy": {
                            "type": "string"
                          },
                          "lastDeployedById": {
                            "type": "string"
                          },
                          "lastDeployedAt": {
                            "type": "string"
                          }
                        }
                      },
                      "methods": {
                        "type": "array",
                        "items": {
                          "type": "string",
                          "enum": [
                            "GET",
                            "POST",
                            "PUT",
                            "PATCH",
                            "DELETE",
                            "OPTION"
                          ]
                        }
                      },
                      "description": {
                        "type": "string"
                      },
                      "response_properties": {
                        "type": "string"
                      },
                      "services": {
                        "type": "object",
                        "properties": {
                          "action|dataSource": {
                            "type": "object",
                            "additionalProperties": false,
                            "properties": {
                              "rating": {
                                "properties": {
                                  "callRating": {
                                    "type": "object",
                                    "additionalProperties": false,
                                    "properties": {
                                      "type": {
                                        "type": "string"
                                      },
                                      "maxCalls": {
                                        "type": "integer"
                                      },
                                      "periodInMs": {
                                        "type": "integer"
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      },
                      "orgId": {
                        "type": "string"
                      },
                      "url": {
                        "type": "string"
                      },
                      "uid": {
                        "type": "string"
                      },
                      "hasBeenDeployed": {
                        "type": "boolean"
                      },
                      "tenantId": {
                        "type": "string"
                      },
                      "name": {
                        "type": "string"
                      },
                      "_id": {
                        "type": "string"
                      },
                      "state": {
                        "type": "string",
                        "enum": [
                          "created",
                          "updated",
                          "deployed"
                        ]
                      }
                    }
                  }
                }
              }
            },
            "examples": {
              "application/json": {
                "results": [
                  {
                    "uid": "57e39085-51c1-4f44-9f51-b56b0fa9cb81",
                    "metadata": {
                      "createdBy": "<user name>",
                      "createdById": "<user adobeId>",
                      "createdAt": "2019-10-21T08:23:44.273Z",
                      "lastModifiedBy": "<user name>",
                      "lastModifiedById": "<user adobeId>",
                      "lastModifiedAt": "2019-12-21T08:23:44.273Z",
                      "lastDeployedBy": "<user name>",
                      "lastDeployedById": "<user adobeId>",
                      "lastDeployedAt": "2020-11-01T17:16:50.929405Z"
                    },
                    "authoringFormatVersion": "1.0",
                    "methods": [
                      "PUT"
                    ],
                    "hasBeenDeployed": true,
                    "tenantId": "prod",
                    "_id": "57e39085-51c1-4f44-9f51-b56b0fa9cb81",
                    "services": {
                      "action": {
                        "maxHttpConnections": 30000,
                        "rating": {
                          "maxCallsCount": 1500,
                          "periodInMs": 1000
                        }
                      }
                    },
                    "state": "updated",
                    "url": "https://api.example.com/v3/messages/*/send",
                    "orgId": "<IMS Org Id>",
                    "deployedConfig": {
                      "_id": "57e39085-51c1-4f44-9f51-b56b0fa9cb81",
                      "methods": [
                        "PUT"
                      ],
                      "tenantId": "prod",
                      "id": "57e39085-51c1-4f44-9f51-b56b0fa9cb81",
                      "services": {
                        "action": {
                          "rating": {
                            "maxCallsCount": 500,
                            "periodInMs": 1000
                          }
                        }
                      },
                      "url": "https://api.example.com/v3/messages/*/send",
                      "orgId": "<IMS Org Id>"
                    }
                  },
                  {
                    "uid": "fbc64b73-c66b-4e30-b3b1-b9d313bd7c4a",
                    "metadata": {
                      "createdBy": "<user name>",
                      "createdById": "<user adobeId>",
                      "createdAt": "2019-10-21T08:23:44.273Z",
                      "lastModifiedBy": "<user name>",
                      "lastModifiedById": "<user adobeId>",
                      "lastModifiedAt": "2019-10-21T08:23:44.273Z",
                      "lastDeployedBy": "<user name>",
                      "lastDeployedById": "<user adobeId>",
                      "lastDeployedAt": "2020-11-01T17:16:50.929405Z"
                    },
                    "authoringFormatVersion": "1.0",
                    "methods": [
                      "GET"
                    ],
                    "hasBeenDeployed": true,
                    "tenantId": "prod",
                    "_id": "fbc64b73-c66b-4e30-b3b1-b9d313bd7c4a",
                    "services": {
                      "dataSource": {
                        "rating": {
                          "maxCallsCount": 3000,
                          "periodInMs": 1000
                        }
                      }
                    },
                    "state": "deployed",
                    "url": "https://api.example.org/data/2.5/*",
                    "orgId": "<IMS Org Id>",
                    "deployedConfig": {
                      "_id": "fbc64b73-c66b-4e30-b3b1-b9d313bd7c4a",
                      "methods": [
                        "POST"
                      ],
                      "tenantId": "prod",
                      "id": "fbc64b73-c66b-4e30-b3b1-b9d313bd7c4a",
                      "services": {
                        "dataSource": {
                          "rating": {
                            "maxCallsCount": 3000,
                            "periodInMs": 1000
                          }
                        }
                      },
                      "url": "https://api.example.org/data/2.5/*",
                      "orgId": "<IMS Org Id>"
                    }
                  }
                ]
              }
            }
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    }
  }
}